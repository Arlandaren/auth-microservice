syntax = "proto3";

package auth_v1;

option go_package = "service/pkg/grpc/auth_v1";

import "google/api/annotations.proto";

message LoginRequest {
  string name = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
}

message RegisterRequest {
  string name = 1;
  string password = 2;
}

message RegisterResponse {
  string token = 1;
}

message RegisterAdminRequest {
  string name = 1;
  string password = 2;
  string role = 3;
}

message RegisterAdminResponse {
  int64 id = 1;
}

message OIDCTokenRequest {
  string response_type = 1;
  string client_id = 2;
  string nonce = 4;
  string redirect_uri = 5;
  string code_challenge = 6;
  string code_challenge_method = 7;
  string name = 8;
  string password = 9;
}

message OIDCTokenResponse {
}

message OIDCExchangeRequest {
  string grant_type = 1;
  string code = 2;
  string redirect_uri = 3;
  string client_id = 4;
  string client_secret = 5;
  string code_verifier = 6;
}

message OIDCExchangeResponse {
  string access_token = 1;
  string id_token = 2;
  string token_type = 3;
  string expires_in = 4;
  string scope = 5;
}

message User {
  int64 id = 1;
  string password = 2;
  string name = 3;
}

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse){
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  };
  rpc Register(RegisterRequest) returns (RegisterResponse){
    option (google.api.http) = {
      post: "/v1/auth/register"
      body: "*"
    };
  };
  rpc RegisterAdmin(RegisterAdminRequest) returns (RegisterAdminResponse){
    option (google.api.http) = {
      post: "/v1/auth/register/admin"
      body: "*"
    };
  };
  rpc OIDCToken(OIDCTokenRequest) returns (OIDCTokenResponse){
    option (google.api.http) = {
      post: "/v1/auth/oidc/token"
      body: "*"
    };
  };

  rpc OIDCExchange(OIDCExchangeRequest) returns (OIDCExchangeResponse){
    option (google.api.http) = {
      post: "/v1/auth/oidc/exchange"
      body: "*"
    };
  };
}